name: Continuous Deployment

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "main"
  workflow_dispatch:

env:
  DOCKER_REGISTRY: "docker.io"
  ARTIFACT_NAME: "properties-api"
  PROJECT_ID: "duckhome-firebase"
  PROJECT_NAME: "duckhome-project"
  SERVICE_NAME: "properties-api-service"
  CLOUD_REGION: "southamerica-east1"
  ZONE: "southamerica-east1-a"
  ASPNETCORE_ENVIRONMENT: "Production"
  ASPNETCORE_URLS: "http://*:80"
  TZ: "America/Sao_Paulo"

jobs:
  deploy-infrastructure:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.7

      - name: Build Image URL
        run: |
          echo "IMAGE_URL=docker.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ env.APP_VERSION }}" >> $GITHUB_ENV
          echo "IMAGE_URL=${{ env.IMAGE_URL }}"

      - name: Set Environment Variables from GitHub Secrets
        env:
          IMAGE_URL: ${{ env.IMAGE_URL }}
        run: |
          echo "tf_var_project_id=${{ env.PROJECT_ID }}" >> $GITHUB_ENV
          echo "tf_var_project_name=${{ env.PROJECT_NAME }}" >> $GITHUB_ENV
          echo "tf_var_cloud_region=${{ env.CLOUD_REGION }}" >> $GITHUB_ENV
          echo "tf_var_zone=${{ env.ZONE }}" >> $GITHUB_ENV
          echo "tf_var_service_name=${{ env.SERVICE_NAME }}" >> $GITHUB_ENV
          echo "tf_var_image_url=${{ env.IMAGE_URL }}" >> $GITHUB_ENV
          echo "tf_var_aspnetcore_environment=${{ env.ASPNETCORE_ENVIRONMENT }}" >> $GITHUB_ENV
          echo "tf_var_aspnetcore_urls=${{ env.ASPNETCORE_URLS }}" >> $GITHUB_ENV
          echo "tf_var_mongodb_url=${{ secrets.MONGODB_URL }}" >> $GITHUB_ENV
          echo "tf_var_mongodb_database=${{ secrets.MONGODB_DATABASE }}" >> $GITHUB_ENV
          echo "tf_var_property_collection_name=${{ secrets.PROPERTY_COLLECTION_NAME }}" >> $GITHUB_ENV
          echo "tf_var_property_sequence_collection_name=${{ secrets.PROPERTY_SEQUENCE_COLLECTION_NAME }}" >> $GITHUB_ENV
          echo "tf_var_tz=${{ env.TZ }}" >> $GITHUB_ENV
          echo "GOOGLE_CREDENTIALS=./gcp-credentials.json" >> $GITHUB_ENV

      - name: Terraform Init
        run: terraform init

      - name: Create secrets.tfvars
        run: |
          echo "PROJECT_ID=\"$tf_var_project_id\"" > secrets.tfvars
          echo "PROJECT_NAME=\"$tf_var_project_name\"" >> secrets.tfvars
          echo "CLOUD_REGION=\"$tf_var_cloud_region\"" >> secrets.tfvars
          echo "ZONE=\"$tf_var_zone\"" >> secrets.tfvars
          echo "SERVICE_NAME=\"$tf_var_service_name\"" >> secrets.tfvars
          echo "IMAGE_URL=\"$tf_var_image_url\"" >> secrets.tfvars
          echo "ASPNETCORE_ENVIRONMENT=\"$tf_var_aspnetcore_environment\"" >> secrets.tfvars
          echo "ASPNETCORE_URLS=\"$tf_var_aspnetcore_urls\"" >> secrets.tfvars
          echo "MONGODB_URL=\"$tf_var_mongodb_url\"" >> secrets.tfvars
          echo "MONGODB_DATABASE=\"$tf_var_mongodb_database\"" >> secrets.tfvars
          echo "PROPERTY_COLLECTION_NAME=\"$tf_var_property_collection_name\"" >> secrets.tfvars
          echo "PROPERTY_SEQUENCE_COLLECTION_NAME=\"$tf_var_property_sequence_collection_name\"" >> secrets.tfvars
          echo "TZ=\"$tf_var_tz\"" >> secrets.tfvars

      - name: Terraform validate
        if: false
        run: |
          terraform validate

      - name: Terraform Plan
        if: false
        run: |
          terraform plan -var-file=secrets.tfvars

      - name: Terraform Seek and Destroy
        if: false
        run: |
          terraform destroy

      - name: Terraform Apply
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        run: |
          terraform apply -auto-approve -var-file=secrets.tfvars
